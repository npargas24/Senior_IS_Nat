%% This BibTeX bibliography file was created using BibDesk.
%% http://www.cs.ucsd.edu/~mmccrack/bibdesk.html
%% Created for Jon Breitenbucher at 2005-09-15 16:48:40 -0400 
%% Saved with string encoding UTF-8 
@book{intelManual,
author = {?},
title = {Intel® 64 and IA-32 Architectures Software Developer’s Manual},
publisher = {Intel},
year = {2024},
annote = {Describes the architecture and programming environment of processors supporting IA-32 and Intel® 64 architectures.}
}

@book{PracticalRE,
author    = {Bruce Dang, Alexandre Gazet, Elias Bachaalany, Sebastien Josse},
title     = {Practical Reverse Engineering : X86, X64, ARM, Windows Kernel, Reversing Tools, and Obfuscation},
publisher = {John Wiley & Sons, Incorporated},
year      = {2014},
annote    = {This textbook goes into the weeds of reverse engineering with each of the different most popular instruction set architectures.}
}
@book{Reversing,
author    = {Eilam, Eldad},
title     = {Reversing : Secrets of Reverse Engineering},
publisher = {John Wiley & Sons, Incorporated},
year      = {2005},
annote    = {This textbook is a comprehensive guide on reverse engineering. It covers all of the tools, methods, applications, and any related information on reverse engineering.}
}
@book{MasteringRE,
author    = {Reginald Wong},
title     = {Mastering Reverse Engineering},
publisher = {Packt Publishing},
year      = {2018},
annote    = {This textbook is also a general guide on reverse engineering even though it is slightly less comprehensive. It covers some extra information alongside different example problems.}
}
@article{AssemblyRe,
author    = {Mytechnotalent},
title     = {Reverse Engineering For Everyone!},
journal   = {Github},
year      = {2021},
url     = {https://0xinfection.github.io/reversing/},
annote    = {This is the holy grail for reverse engineering from Assembly. It starts with explaining the basics and gradually teaches the reader anything they’d need to know for reverse engineering. There’s even specific guides for each low level architecture such as x86 or ARM32. Once they’ve been given all the background information they can ask for, there are multiple example problems with their explanations so they can see how the information is applied. I plan to use the x86 section in this book to guide me on understanding the Assembly code the decompilation of my project will produce.}
}

@article{ColorDe,
author    = {Nick Sarno},
title     = {Color, UIColor, Color Literals, and Hex Colors in SwiftUI | Bootcamp #4},
journal   = {Youtube},
year      = {2021},
url     = { www.youtube.com/watch?v=pqnLevvM7Rs},
annote    = {This video goes over how to work with colors in Swift. It will be helpful specifically for the RGB slider portion of my project.}
}

@article{AppDe,
author    = {Chris Ching},
title     = {How to Make an App in 8 Days (2024)},
journal   = {Youtube},
year      = {2024},
url     = {youtube.com/playlist?list=PLMRqhzcHGw1Y5Cluhf7pKRNZtKaA3Q4kg&si=CpPRbNJ8wKRW_xXx},
annote    = {This playlist is similar to the textbook on mobile app development but has some more step by step guides. In it they are creating an app to play the card game War. I will only be using the videos on UI development, Swift Functions, and mobile app Logic. }
}
% Other types include book for citing books, inproceedings for conference
% proceedings, and many other types.
@book{mobileRe,
author    = {Abhinav Mishra},
title     = {Mobile App Reverse Engineering: Get Started with Discovering, Analyzing, and Exploring the Internals of Android and IOS Apps.},
publisher = {Packt Publishing},
year      = {2021},
annote    = {This textbook has been the most used source of my project information thus far. It has a breakdown of how iOS apps are structured as well as the tools needed to reverse engineer them. There is also a general overview of all of the basic iOS reverse engineering methods. Some of the tools it goes over include Ghidra, Radare2 framework, and Frida. Because I am not dealing with encryption, Radare2 and Frida will be less helpful to me. The part on Ghidra static analysis is probably going to be the most helpful. I imagine I will refer to this textbook heavily at the beginning of my project, but need to look to other sources for more thorough breakdowns of Assembly and Ghidra.} 
}

@book{mobileDe,
author    = {Iversen, Jakob, and Michael Eierman},
title     = {Learning Mobile App Development: A Hands-on Guide to Building Apps with IOS and Android},
publisher = {Addison-Wesley},
year      = {2014},
annote    = {This textbook goes over the fundamentals of mobile app development. I will specifically be using the section on iOS development. They offer an overview of Apple’s Xcode programming environment. They cover both interface design and data handling. Both of these parts will be relevant to my project since I’ll be dealing with UI design and color display.}
}

@book{GhidraRe,
author    = {A.P. David},
title     = {Ghidra Software Reverse Engineering for Beginners},
publisher = {Packt Publishing},
year      = {2021},
annote    = {This textbook is a reference for navigating Ghidra. I plan to refer to this textbook when I am stuck on how to handle something in my reverse engineering endeavors. There are a lot of explanations of how to use Ghidra’s expansive tool library as well as how to automate scripts. It even begins with a breakdown of reverse engineering a Hello World program that would’ve been helpful when I was beginning the process of figuring out reverse engineering. The section on creating graphs for functions in Ghidra has already helped to guide me.}
}

@book{makebluetooth,
  author    = {Alasdair Allan and Don Coleman and Sandeep Mistry},
  title     = {Make: Bluetooth: Bluetooth LE Projects with Arduino, Raspberry Pi, and Smartphones},
  year      = {2016},
  publisher = {Maker Media, Inc.},
  isbn      = {9781680451108},
  url       = {https://learning.oreilly.com/library/view/make-bluetooth/9781680451108/}
}

@book{gettingstartedwble,
  author    = {Kevin Townsend and Carles Cufí and Akiba and Robert Davidson},
  title     = {Getting Started with Bluetooth Low Energy: Tools and Techniques for Low-Power Networking},
  year      = {2015},
  publisher = {O’Reilly Media, Inc.},
  isbn      = {9781491900550},
  url       = {https://learning.oreilly.com/library/view/getting-started-with/9781491900550/}
}

@misc{introtoble,
  author    = {Spiros Daskalakis},
  title     = {Introduction to Bluetooth Low Energy v1.1},
  year      = {2019},
  url       = {https://daskalakispiros.com/files/Ebooks/Intro+to+Bluetooth+Low+Energy+v1.1.pdf},
  note      = {Accessed: 2025-04-24}
}

@incollection{nextgenBLE,
  author    = {Sasha Sirotkin and Kassem Fawaz and Anthony Rowe},
  title     = {Bluetooth 5 and Beyond},
  booktitle = {Next Generation of Internet of Things},
  publisher = {ISTE Press - Elsevier},
  year      = {2020},
  isbn      = {9781789451771},
  url       = {https://learning.oreilly.com/library/view/next-generation-of/9781789451771/c06.xhtml#s6-5}
}

@book{buildingBLEsystems,
  author    = {Mohammad Afaneh and Kevin Townsend and M. Karvinen},
  title     = {Building Bluetooth Low Energy Systems},
  year      = {2017},
  publisher = {Packt Publishing},
  isbn      = {9781786461087},
  url       = {https://learning.oreilly.com/library/view/building-bluetooth-low/9781786461087/}
}

@misc{bluetoothcorespec6,
  author    = {{Bluetooth SIG}},
  title     = {Bluetooth Core Specification Version 6.0},
  year      = {2024},
  url       = {https://www.bluetooth.com/specifications/specs/core60-html/},
  note      = {Accessed: 2025-04-24}
}

@misc{intelBLEguide,
  author    = {{Intel Corporation}},
  title     = {How Does Bluetooth Work?},
  year      = {2023},
  url       = {https://www.intel.com/content/www/us/en/products/docs/wireless/how-does-bluetooth-work.html},
  note      = {Accessed: 2025-04-24}
}


@article{stateofartRE,
	abstract = {Communication protocols enable structured information exchanges between different entities. A description, at different levels of detail, is necessary for many applications, such as interoperability or security audits. When such a description is not available, one can resort to protocol reverse engineering to infer the format of exchanged messages or a model of the protocol. During the past 12 years, several tools have been developed in order to automate, entirely or partially, the protocol inference process. Each of those tools has been developed with a specific application goal for the inferred model, leading to specific needs, and thus different strengths and limitations. After identifying key challenges, the paper presents a survey of protocol reverse engineering tools developed in the last decade. We consider tools focusing on the inference of the format of individual messages or of the grammar of sequences of messages. Finally, we propose a classification of these tools according to different criteria, that is aimed at providing relevant insights about the techniques used by each of these tools and comparatively to other tools, for the classification of messages, the inference of their format or of the grammar of the protocol. This classification also permits to identify technical areas that are not sufficiently explored so far and that require further development in the future.},
	author = {Duch{\^e}ne, Julien and Le Guernic, Colas and Alata, Eric and Nicomette, Vincent and Ka{\^a}niche, Mohamed},
	date = {2018/02/01},
	date-added = {2025-07-21 13:11:29 -0400},
	date-modified = {2025-07-21 13:11:29 -0400},
	doi = {10.1007/s11416-016-0289-8},
	id = {Duch{\^e}ne2018},
	isbn = {2263-8733},
	journal = {Journal of Computer Virology and Hacking Techniques},
	number = {1},
	pages = {53--68},
	title = {State of the art of network protocol reverse engineering tools},
	url = {https://doi.org/10.1007/s11416-016-0289-8},
	volume = {14},
	year = {2018},
	bdsk-url-1 = {https://doi.org/10.1007/s11416-016-0289-8}}

@book{covertjava,
	author    = {Alex Kalinovsky},
	title     = {Covert Java: Techniques for Decompiling, Patching, and Reverse Engineering},
	publisher = {Sams Publishing},
	year      = {2004},
	address   = {Indianapolis, IN, USA},
	isbn      = {0-672-32638-8}
}

@book{headfirstandroid,
	author    = {Griffiths, Dawn and Griffiths, David},
	title     = {Head First Android Development},
	edition   = {3},
	publisher = {O{\textquotesingle}Reilly Media, Incorporated},
	address   = {Sebastopol, CA},
	year      = {2021},
	isbn      = {978-1492076513},
}

@book{jvms8,
	author    = {Tim Lindholm and Frank Yellin and Gilad Bracha and Alex Buckley},
	title     = {The Java\textregistered{} Virtual Machine Specification, Java SE 8 Edition},
	publisher = {Addison–Wesley Professional (Oracle),
	Pearson Education},
	address   = {Boston, MA},
	year      = {2014},
	month     = {May},
	isbn      = {978-0133922721},
	note      = {Published electronically by Oracle on 2015-02-13},
}

@techreport{bluetooth2023,
	author       = {{Bluetooth SIG, Inc.}},
	title        = {Core Specification 5.4 – Host},
	institution  = {Bluetooth Special Interest Group},
	type         = {Technical Report},
	year         = {2023},
	month        = feb,
	note         = {Available online},
	url          = {https://www.bluetooth.com/wp-content/uploads/Files/Specification/HTML/Core-54/out/en/host.html},
}
